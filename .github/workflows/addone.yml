name: PR Automation with Docker, Tests, Slack, and Approval

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t sample-nodejs-app .

      - name: Run Tests
        run: docker run --rm sample-nodejs-app npm test

      - name: Notify Teams - Build Passed
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "PR #${{ github.event.number }}: Build Successful. Tests Passed. Ready for Approval. <${{ github.event.pull_request.html_url }}|View PR>"}' \
          ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Notify Teams - Build Failed
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "PR #${{ github.event.number }}: Build Failed or Tests Failed. <${{ github.event.pull_request.html_url }}|View PR>"}' \
          ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Notify Slack - Test Passed
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "PR #${{ github.event.number }}: Build & Tests Passed. Ready for Approval. <${{ github.event.pull_request.html_url }}|View PR>"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack - Test Failed
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "PR #${{ github.event.number }}: Build or Tests Failed. <${{ github.event.pull_request.html_url }}|View PR>"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  approval:
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Request Approval
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_LOGIN: dependabot-preview
          GITHUB_TOKEN: ${{ secrets.DGITHUB_TOKEN }}
          MERGE_METHOD: 'merge'

      - name: Notify Teams - Approval Required
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "PR #${{ github.event.number }}: Build Passed. Approval Required. <${{ github.event.pull_request.html_url }}|Review and Approve PR>"}' \
          ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Notify Slack - Approval Required
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "PR #${{ github.event.number }}: Build Passed. Approval Required. <${{ github.event.pull_request.html_url }}|Review and Approve PR>"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  merge:
    runs-on: ubuntu-latest
    needs: approval
    if: github.event.pull_request.merged == 'false' && success()

    steps:
      - name: Merge Pull Request
        run: gh pr merge ${{ github.event.pull_request.number }} --merge

      - name: Notify Slack - PR Merged
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "PR #${{ github.event.number }}: Successfully Merged. <${{ github.event.pull_request.html_url }}|View Merged PR>"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  codeql:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Build the code
        run: |
          npm install

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
